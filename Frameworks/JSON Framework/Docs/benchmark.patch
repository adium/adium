=== Docs/benchmark.patch
==================================================================
=== Tests/Examples.m
==================================================================
--- Tests/Examples.m	(revision 3431)
+++ Tests/Examples.m	(local)
@@ -79,4 +79,47 @@
     STAssertNotNil([self jsonExample:@"ex5"], nil);
 }
 
+
+// This benchmark uses the same strings that JSON::XS uses for its
+// benchmarks. We can't quite compare with it in terms of speed, but
+// that wasn't the idea either.
+#define encode(x) [x JSONRepresentation]
+#define decode(x) [x JSONValue]
+
+- (void)timeWithString:(NSString *)json
+{
+    id decoded = decode(json);
+    unsigned i, count = 1000;
+    NSDate *start;
+
+    start = [NSDate date];
+    for (i = 0; i < count; i++)
+        decode(json);
+    double decDuration = -[start timeIntervalSinceNow];
+
+    start = [NSDate date];
+    for (i = 0; i < count; i++)
+        encode(decoded);
+    double encDuration = -[start timeIntervalSinceNow];
+
+    NSLog(@"                |    encode |    decode |");
+    NSLog(@"SBJSON          | %9.3lf | %9.3f |", count / encDuration, count / decDuration);
+}
+
+- (void)testXSpeed
+{
+    NSString *json = [NSString stringWithContentsOfFile:@"/tmp/short.json"
+                                               encoding:NSASCIIStringEncoding
+                                                  error:nil];
+    NSLog(@"Short");
+    [self timeWithString:json];
+
+    json = [NSString stringWithContentsOfFile:@"/tmp/long.json"
+                                     encoding:NSASCIIStringEncoding
+                                        error:nil];
+    NSLog(@"Long");
+    [self timeWithString:json];
+}
+
+
 @end
