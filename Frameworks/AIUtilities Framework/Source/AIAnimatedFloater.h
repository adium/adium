/*-------------------------------------------------------------------------------------------------------*\
| Adium, Copyright (C) 2001-2005, Adam Iser  (adamiser@mac.com | http://www.adiumx.com)                   |
\---------------------------------------------------------------------------------------------------------/
 | This program is free software; you can redistribute it and/or modify it under the terms of the GNU
 | General Public License as published by the Free Software Foundation; either version 2 of the License,
 | or (at your option) any later version.
 |
 | This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 | the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
 | Public License for more details.
 |
 | You should have received a copy of the GNU General Public License along with this program; if not,
 | write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 \------------------------------------------------------------------------------------------------------ */

/*!
 * @class AIAnimatedFloater
 * @brief Creates a temporary floating window with an animated image.
 *
 * Creates a temporary floating window with an animated image generated by stacking frames vertically.
 */
@interface AIAnimatedFloater : NSObject {
    NSPanel		*panel;

}

/*!
 * @brief Creates the temporary floating window.
 *
 * Creates the temporary floating window. AIAnimatedFloater will handle releasing itself when the animation is complete.
 * @param inImage The <tt>NSImage</tt> to display; if <tt>inFrames</tt> is more than 1, it should contain frames stactically vertically into a single <tt>NSImage</tt>.
 * @param inSize The size at which to display the image.
 * @param inFrames The number of vertically stacked frames in <b>inImage</b>
 * @param inDelay The amount of time after the animation is complete at which to close the window
 * @param inPoint The point, in screen coordinates, for the bottom-left corner of the image
 * @return An <tt>AIAnimatedFloater</tt> object.
 */
+ (id)animatedFloaterWithImage:(NSImage *)inImage size:(NSSize)inSize frames:(int)inFrames delay:(float)inDelay at:(NSPoint)inPoint;

/*!
 * @brief Close the <tt>AIAnimatedFloater</tt> immediately.
 *
 * Close the <tt>AIAnimatedFloater</tt> immediately.
 */
- (IBAction)close:(id)sender;

@end
